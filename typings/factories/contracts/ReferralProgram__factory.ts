/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReferralProgram,
  ReferralProgramInterface,
} from "../../contracts/ReferralProgram";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "referees",
        type: "address[]",
      },
    ],
    name: "calculateGains",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "deliver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "limit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "verifyBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cc2380380610cc283398101604081905261002f91610178565b61003833610128565b6001600160a01b0382166100935760405162461bcd60e51b815260206004820152601e60248201527f526566657272616c50726f6772616d3a20746f6b656e206973207a65726f000060448201526064015b60405180910390fd5b6000600254116100ff5760405162461bcd60e51b815260206004820152603160248201527f526566657272616c50726f6772616d3a204c696d6974206973206c6f7765722060448201527037b91032b8bab0b6103a37903d32b9379760791b606482015260840161008a565b600180546001600160a01b0319166001600160a01b0393909316929092179091556002556101b2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561018b57600080fd5b82516001600160a01b03811681146101a257600080fd5b6020939093015192949293505050565b610b01806101c16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639da5e832116100665780639da5e832146100f5578063a4d66daf14610118578063d2a19d0514610121578063ef4e06ec14610134578063f2fde38b1461014757600080fd5b80632b68b9c614610098578063591d91b9146100a2578063715018a6146100c85780638da5cb5b146100d0575b600080fd5b6100a061015a565b005b6100b56100b0366004610890565b6102b3565b6040519081526020015b60405180910390f35b6100a06103f1565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100bf565b6101086101033660046108de565b610427565b60405190151581526020016100bf565b6100b560025481565b6100a061012f366004610999565b610613565b6001546100dd906001600160a01b031681565b6100a0610155366004610999565b6106b3565b6000546001600160a01b0316331461018d5760405162461bcd60e51b8152600401610184906109bb565b60405180910390fd5b600080546001600160a01b03166001546040516370a0823160e01b81523060048201529192506001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b1580156101e857600080fd5b505afa1580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022091906109f0565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561026657600080fd5b505af115801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e9190610a09565b506102a76103f1565b806001600160a01b0316ff5b600080546001600160a01b031633146102de5760405162461bcd60e51b8152600401610184906109bb565b6001600160a01b0383166102f157600080fd5b81516102fc57600080fd5b6000805b83518110156103e95760015484516064916001600160a01b0316906370a082319087908590811061033357610333610a2b565b60200260200101516040518263ffffffff1660e01b815260040161036691906001600160a01b0391909116815260200190565b60206040518083038186803b15801561037e57600080fd5b505afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b691906109f0565b6103c190600c610a57565b6103cb9190610a76565b6103d59083610a98565b9150806103e181610ab0565b915050610300565b509392505050565b6000546001600160a01b0316331461041b5760405162461bcd60e51b8152600401610184906109bb565b6104256000610747565b565b600080546001600160a01b031633146104525760405162461bcd60e51b8152600401610184906109bb565b82516104b25760405162461bcd60e51b815260206004820152602960248201527f526566657272616c50726f6772616d3a20726563697069656e74206c656e677460448201526868206973207a65726f60b81b6064820152608401610184565b81518351146105145760405162461bcd60e51b815260206004820152602860248201527f526566657272616c50726f6772616d3a20617267756d656e74732073697a65206044820152670dad2e6dac2e8c6d60c31b6064820152608401610184565b60005b83518110156106095760015484516001600160a01b039091169063a9059cbb9086908490811061054957610549610a2b565b602002602001015185848151811061056357610563610a2b565b60200260200101516040518363ffffffff1660e01b815260040161059c9291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190610a09565b6105f757600080fd5b8061060181610ab0565b915050610517565b5060019392505050565b6001600160a01b03811661062657600080fd5b6002546001546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a082319060240160206040518083038186803b15801561066e57600080fd5b505afa158015610682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a691906109f0565b106106b057600080fd5b50565b6000546001600160a01b031633146106dd5760405162461bcd60e51b8152600401610184906109bb565b6001600160a01b0381166107425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610184565b6106b0815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107ae57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107f2576107f26107b3565b604052919050565b600067ffffffffffffffff821115610814576108146107b3565b5060051b60200190565b600082601f83011261082f57600080fd5b8135602061084461083f836107fa565b6107c9565b82815260059290921b8401810191818101908684111561086357600080fd5b8286015b848110156108855761087881610797565b8352918301918301610867565b509695505050505050565b600080604083850312156108a357600080fd5b6108ac83610797565b9150602083013567ffffffffffffffff8111156108c857600080fd5b6108d48582860161081e565b9150509250929050565b600080604083850312156108f157600080fd5b823567ffffffffffffffff8082111561090957600080fd5b6109158683870161081e565b935060209150818501358181111561092c57600080fd5b85019050601f8101861361093f57600080fd5b803561094d61083f826107fa565b81815260059190911b8201830190838101908883111561096c57600080fd5b928401925b8284101561098a57833582529284019290840190610971565b80955050505050509250929050565b6000602082840312156109ab57600080fd5b6109b482610797565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a0257600080fd5b5051919050565b600060208284031215610a1b57600080fd5b815180151581146109b457600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a7157610a71610a41565b500290565b600082610a9357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610aab57610aab610a41565b500190565b6000600019821415610ac457610ac4610a41565b506001019056fea2646970667358221220e55e5dc782e44d8fe1ec9e8aaa12c0c5e9bb9bd7069e1f545ed2093898fb6e1864736f6c63430008090033";

type ReferralProgramConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _limit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReferralProgram> {
    return super.deploy(
      _DPS,
      _limit,
      overrides || {}
    ) as Promise<ReferralProgram>;
  }
  override getDeployTransaction(
    _DPS: string,
    _limit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _limit, overrides || {});
  }
  override attach(address: string): ReferralProgram {
    return super.attach(address) as ReferralProgram;
  }
  override connect(signer: Signer): ReferralProgram__factory {
    return super.connect(signer) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new utils.Interface(_abi) as ReferralProgramInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralProgram {
    return new Contract(address, _abi, signerOrProvider) as ReferralProgram;
  }
}
