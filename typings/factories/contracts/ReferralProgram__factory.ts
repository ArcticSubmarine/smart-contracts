/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReferralProgram,
  ReferralProgramInterface,
} from "../../contracts/ReferralProgram";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "deliver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161077b38038061077b83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61068f806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639da5e83214610090578063ef4e06ec146100b3578063f2fde38b146100c6575b600080fd5b6100646100d9565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a361009e3660046104e1565b610118565b6040519015158152602001610087565b600154610073906001600160a01b031681565b6100646100d43660046105a1565b610304565b6000546001600160a01b0316331461010c5760405162461bcd60e51b8152600401610103906105c3565b60405180910390fd5b610116600061039f565b565b600080546001600160a01b031633146101435760405162461bcd60e51b8152600401610103906105c3565b82516101a35760405162461bcd60e51b815260206004820152602960248201527f526566657272616c50726f6772616d3a20726563697069656e74206c656e677460448201526868206973207a65726f60b81b6064820152608401610103565b81518351146102055760405162461bcd60e51b815260206004820152602860248201527f526566657272616c50726f6772616d3a20617267756d656e74732073697a65206044820152670dad2e6dac2e8c6d60c31b6064820152608401610103565b60005b83518110156102fa5760015484516001600160a01b039091169063a9059cbb9086908490811061023a5761023a6105f8565b6020026020010151858481518110610254576102546105f8565b60200260200101516040518363ffffffff1660e01b815260040161028d9291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df919061060e565b6102e857600080fd5b806102f281610630565b915050610208565b5060019392505050565b6000546001600160a01b0316331461032e5760405162461bcd60e51b8152600401610103906105c3565b6001600160a01b0381166103935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610103565b61039c8161039f565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561042e5761042e6103ef565b604052919050565b600067ffffffffffffffff821115610450576104506103ef565b5060051b60200190565b80356001600160a01b038116811461047157600080fd5b919050565b600082601f83011261048757600080fd5b8135602061049c61049783610436565b610405565b82815260059290921b840181019181810190868411156104bb57600080fd5b8286015b848110156104d657803583529183019183016104bf565b509695505050505050565b600080604083850312156104f457600080fd5b823567ffffffffffffffff8082111561050c57600080fd5b818501915085601f83011261052057600080fd5b8135602061053061049783610436565b82815260059290921b8401810191818101908984111561054f57600080fd5b948201945b83861015610574576105658661045a565b82529482019490820190610554565b9650508601359250508082111561058a57600080fd5b5061059785828601610476565b9150509250929050565b6000602082840312156105b357600080fd5b6105bc8261045a565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561062057600080fd5b815180151581146105bc57600080fd5b600060001982141561065257634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212203108dbd0c1d37979dee68c24d6141463807f17deb361e6a2ef25036bc2d5c51a64736f6c63430008090033";

type ReferralProgramConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReferralProgram> {
    return super.deploy(_DPS, overrides || {}) as Promise<ReferralProgram>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): ReferralProgram {
    return super.attach(address) as ReferralProgram;
  }
  override connect(signer: Signer): ReferralProgram__factory {
    return super.connect(signer) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new utils.Interface(_abi) as ReferralProgramInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralProgram {
    return new Contract(address, _abi, signerOrProvider) as ReferralProgram;
  }
}
